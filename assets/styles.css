:root {
    --primary-bg: #0f172a;
    --card-bg: #1e293b;
    --text-primary: #f8fafc;
    --text-secondary: #e2e8f0;
    --button-bg: #6366f1;
    --button-hover: #4f46e5;
    --nav-dot: #4a4a4a;
    --nav-dot-active: #6366f1;
    --card-shadow: rgba(0, 0, 0, 0.25);
    --accent-gradient: linear-gradient(135deg, #6366f1, #8b5cf6);
}

/* Base styles with your original setup */
body {
    background-color: #0f172a;
    background-image: 
        linear-gradient(to right, rgba(15, 23, 42, 0.94), rgba(15, 23, 42, 0.86)),
        url('../assets/bg.png');
    background-size: cover;
    background-attachment: fixed;
    background-position: center;
    position: relative;
    min-height: 100vh;
    overflow-x: hidden;
}

/* Create a starfield effect with two layers for seamless loop */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 200%;  /* Double height for seamless loop */
    background-image: 
        radial-gradient(1px 1px at 20px 30px, rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0)),
        radial-gradient(1px 1px at 40px 70px, rgba(255, 255, 255, 0.4), rgba(0, 0, 0, 0)),
        radial-gradient(1.5px 1.5px at 90px 40px, rgba(255, 255, 255, 0.5), rgba(0, 0, 0, 0)),
        radial-gradient(2px 2px at 160px 120px, rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0));
    background-repeat: repeat;
    background-size: 200px 200px;
    animation: starfield 60s linear infinite;
    pointer-events: none;
    z-index: 1;
}

/* Add a subtle nebula effect */
body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        radial-gradient(circle at 50% 50%, 
            rgba(76, 0, 255, 0.05) 0%,
            rgba(15, 23, 42, 0) 60%),
        radial-gradient(circle at 85% 15%, 
            rgba(0, 255, 255, 0.03) 0%,
            rgba(15, 23, 42, 0) 50%);
    filter: blur(60px);
    mix-blend-mode: screen;
    animation: nebula 30s ease infinite;
    pointer-events: none;
    z-index: 2;
}

/* Add a subtle grid effect */
.grid-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
        linear-gradient(rgba(46, 91, 255, 0.03) 1px, transparent 1px),
        linear-gradient(90deg, rgba(46, 91, 255, 0.03) 1px, transparent 1px);
    background-size: 30px 30px;
    pointer-events: none;
    z-index: 3;
    animation: gridPulse 15s ease-in-out infinite;
}

/* Animations */
@keyframes starfield {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(-50%);  /* Only move up half way for seamless loop */
    }
}

@keyframes nebula {
    0%, 100% {
        opacity: 0.5;
        transform: scale(1);
    }
    50% {
        opacity: 0.7;
        transform: scale(1.1);
    }
}

@keyframes gridPulse {
    0%, 100% {
        opacity: 0.3;
        background-size: 30px 30px;
    }
    50% {
        opacity: 0.5;
        background-size: 32px 32px;
    }
}

/* Add smooth transitions for any content */
main {
    position: relative;
    z-index: 10;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

.page-title {
    background: var(--accent-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    position: relative;
    display: inline-block;
}

.page-title::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 0;
    width: 60%;
    height: 3px;
    background: var(--accent-gradient);
    border-radius: 2px;
    transform: translateX(33%);
}

.view-button {
    background: var(--accent-gradient);
    color: white;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.view-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
}

.view-button::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(255, 255, 255, 0.2), transparent);
    transform: translateY(-100%);
    transition: transform 0.3s ease;
}

.view-button:hover::after {
    transform: translateY(0);
}

.tns-nav {
    text-align: center;
    margin: 15px 0;
}

.tns-nav button {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--nav-dot);
    border: 0;
    margin: 0 4px;
    padding: 0;
    transition: all 0.3s ease;
}

.tns-nav button.tns-nav-active {
    background: var(--nav-dot-active);
    transform: scale(1.2);
}

.tns-controls {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: calc(100% - 16px);
    max-width: 100%;
    z-index: 10;
    pointer-events: none;
    display: flex;
    justify-content: space-between;
}

.tns-controls button {
    pointer-events: auto;
    background: var(--card-bg);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-primary);
    font-size: 18px;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px var(--card-shadow);
    opacity: 0.8;
    margin: 0 -8px;
}

.tns-controls button:hover {
    background: var(--button-bg);
    color: var(--card-bg);
    opacity: 1;
}

.tns-controls button[data-controls="prev"] {
    left: 0;
}

.tns-controls button[data-controls="next"] {
    right: 0;
}

.slider-container {
    position: relative;
}

.slider-container::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    border-radius: 0.75rem;
}

@media (max-width: 640px) {
    .tns-controls button {
        width: 32px;
        height: 32px;
        font-size: 14px;
    }
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.fade-in {
    animation: fadeIn 0.8s ease-out forwards;
}

/* Tabs styling */
.tab-button {
    position: relative;
    transition: all 0.3s ease;
    background: transparent;
    color: var(--text-secondary);
}

.tab-button::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 2px;
    background: var(--accent-gradient);
    transform: scaleX(0);
    transition: transform 0.3s ease;
}

.tab-button.active {
    color: var(--text-primary);
}

.tab-button.active::after {
    transform: scaleX(1);
}

.tab-content {
    display: none; 
    opacity: 0;
    transition: opacity 0.3s ease;
    position: absolute; 
    width: 100%;
}

.tab-content.active {
    display: block; 
    opacity: 1;
    position: relative;
}

/* Enhanced glassmorphism for cards */
.glass-card {
    background: rgba(30, 41, 59, 0.5);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 
        0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06),
        inset 0 0 80px rgba(99, 102, 241, 0.05);
    position: relative;
    overflow: hidden;
}

.glass-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.05),
        transparent
    );
    transition: 0.5s;
    pointer-events: none;
}

.glass-card:hover::before {
    left: 100%;
}

.highlight-glow {
    color: #ffd700;
    text-shadow: 0 0 5px #fff5d4,
                 0 0 10px #ffd700,
                 0 0 20px #ffd700;
    animation: starlight-pulse 2s ease-in-out infinite;
  }
  
  @keyframes starlight-pulse {
    0% {
      text-shadow: 0 0 5px #fff5d4,
                 0 0 10px #ffd700,
                 0 0 20px #ffd700;
    }
    50% {
      text-shadow: 0 0 10px #fff5d4,
                 0 0 20px #ffd700,
                 0 0 30px #ffd700,
                 0 0 40px #ffe44d;
    }
    100% {
      text-shadow: 0 0 5px #fff5d4,
                 0 0 10px #ffd700,
                 0 0 20px #ffd700;
    }
  }

.eater-regular {
    font-family: "Eater", serif;
    font-weight: 400;
    font-style: normal;
}

.video-container {
    position: relative;
    overflow: hidden;
    width: 100%;
    height: 100%;         /* Fill parent height */
    aspect-ratio: 16/9;   /* Maintain video aspect ratio */
  }
  
  .video-container iframe {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    transform: translate(-50%, -50%);
    object-fit: cover;    /* This ensures the video fills the container */
    min-width: 100%;      /* Ensure full width coverage */
    min-height: 100%;     /* Ensure full height coverage */
  }
  